; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25835.0 

	TITLE	C:\Users\DOTlaptop\Documents\class\Cprogramming\class_repo\performance\performance7-4.c\performance7-4.c\performance7-4.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG7339	DB	'Enter a number: ', 0aH, 00H
	ORG $+2
$SG7340	DB	'%4d', 00H
$SG7342	DB	'Senpai!! You can''t enter numbers larger than 999', 00H
	ORG $+3
$SG7346	DB	'%d is the %d divisible number of %d', 0aH, 00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vfscanf_l
PUBLIC	_scanf
PUBLIC	_main
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vfscanf:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_counter$1 = -12					; size = 4
_x$2 = -8						; size = 4
_y$3 = -4						; size = 4
_main	PROC
; File c:\users\dotlaptop\documents\class\cprogramming\class_repo\performance\performance7-4.c\performance7-4.c\performance7-4.c
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
$LN2@main:
; Line 11
	mov	eax, 1
	test	eax, eax
	je	$LN1@main
; Line 13
	mov	DWORD PTR _x$2[ebp], 0
; Line 14
	mov	DWORD PTR _y$3[ebp], 1
; Line 15
	mov	DWORD PTR _counter$1[ebp], 1
; Line 16
	push	OFFSET $SG7339
	call	_printf
	add	esp, 4
; Line 17
	lea	ecx, DWORD PTR _x$2[ebp]
	push	ecx
	push	OFFSET $SG7340
	call	_scanf
	add	esp, 8
; Line 20
	cmp	DWORD PTR _x$2[ebp], 999		; 000003e7H
	jle	SHORT $LN4@main
; Line 22
	push	OFFSET $SG7342
	call	_printf
	add	esp, 4
; Line 23
	xor	eax, eax
	jmp	SHORT $LN1@main
$LN4@main:
; Line 25
	cmp	DWORD PTR _counter$1[ebp], 21		; 00000015H
	jge	SHORT $LN5@main
; Line 27
	cmp	DWORD PTR _x$2[ebp], 0
	jg	SHORT $LN7@main
; Line 29
	jmp	SHORT $LN5@main
$LN7@main:
; Line 31
	cmp	DWORD PTR _x$2[ebp], 0
	jne	SHORT $LN8@main
; Line 33
	jmp	SHORT $LN4@main
$LN8@main:
; Line 35
	mov	eax, DWORD PTR _x$2[ebp]
	cdq
	idiv	DWORD PTR _y$3[ebp]
	test	edx, edx
	je	SHORT $LN9@main
; Line 37
	mov	edx, DWORD PTR _y$3[ebp]
	add	edx, 1
	mov	DWORD PTR _y$3[ebp], edx
; Line 38
	jmp	SHORT $LN4@main
$LN9@main:
; Line 40
	mov	eax, DWORD PTR _x$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _counter$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$3[ebp]
	push	edx
	push	OFFSET $SG7346
	call	_printf
	add	esp, 16					; 00000010H
; Line 41
	mov	eax, DWORD PTR _counter$1[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$1[ebp], eax
; Line 42
	mov	ecx, DWORD PTR _y$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _y$3[ebp], ecx
; Line 43
	mov	edx, DWORD PTR _y$3[ebp]
	cmp	edx, DWORD PTR _x$2[ebp]
	jle	SHORT $LN10@main
; Line 45
	mov	DWORD PTR _counter$1[ebp], 22		; 00000016H
; Line 46
	jmp	SHORT $LN5@main
$LN10@main:
; Line 48
	jmp	SHORT $LN4@main
$LN5@main:
; Line 49
	jmp	$LN2@main
$LN1@main:
; Line 50
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _scanf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 1280
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1283
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 1284
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	0
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfscanf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 1285
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 1286
	mov	eax, DWORD PTR __Result$[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 1062
	push	ebp
	mov	ebp, esp
; Line 1063
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_scanf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfscanf
	add	esp, 24					; 00000018H
; Line 1066
	pop	ebp
	ret	0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
; Line 94
	push	ebp
	mov	ebp, esp
; Line 96
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 97
	pop	ebp
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
; Line 85
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 88
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
